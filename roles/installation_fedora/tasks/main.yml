---
     - name: upgrade system
       tags:
           - install_fedora
       become: yes
       dnf:
           name: "*"
           state: latest

     - name: Update repositories cache and install package required to build
       become: yes
       dnf:
            name: ['gcc', 'g++', 'autoconf', 'bzr', 'python-devel']
            state: present


     - name: Install insterfaces tools
       become: yes
       dnf:
            name: ['bridge-utils', 'uml_utilities']

     - name: Install list of packages
       become: yes
       dnf:
           name: ['ca-certificates', 'curl', 'docker', 'NetworkManager-libnm-devel', 'python3-gobject']
           state: present
           update_cache: yes

     - name: create docker group
       become: yes
       group:
           name: docker

     - name: add user dockemu to group docker
       become: yes
       user:
           name: dockemu
           group: dockemu
           groups: ['docker','wheel','realtime']

     - name: Creates directory
       file:
          path: "{{deployFolder}}"
          state: directory

     - name: Download ns-3 allinone
       get_url:
          url: "https://www.nsnam.org/release/{{nsVersion}}{{extension}}"
          dest: "{{deployFolder}}/{{nsVersion}}{{extension}}"

     - name: Extract allinone ns3 bz2 in home dir
       unarchive:
          src:  "{{deployFolder}}/{{nsVersion}}{{extension}}"
          dest: "{{deployFolder}}"
          remote_src: yes

     - name: Removing ns3 bz2 file
       file:
          path: "{{deployFolder}}/{{nsVersion}}{{extension}}"
          state: absent

     - name: ns3 set waf configure optimized mode
       command: ./waf -d optimized configure
       args:
           chdir: "{{deployFolder}}/{{nsVersion}}/{{nsCodeFolder}}"
       when: optimized

     - name: ns3 waf configure
       command: ./waf configure --disable-examples --disable-tests --disable-python --enable-static --no-task-lines
       args:
           chdir: "{{deployFolder}}/{{nsVersion}}/{{nsCodeFolder}}"
       when: not optimized

     - name: execute ./waf to build ns3
       command: ./waf
       args:
           chdir: "{{ deployFolder }}/{{ nsVersion }}/{{ nsCodeFolder }}"

     - name: create init script to systemd
       become: yes
       template:
           src: templates/ns3.service.j2
           dest: /usr/lib/systemd/system/ns3.service
           mode: 0755 
